name: Python (CPython)

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Check out source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install pip setuptools wheel --upgrade
      - name: Create source distribution
        run: |
          python setup.py sdist
      - name: Install package
        run: |
          python -m pip install --no-index --find-links=./dist/ iteration_utilities -vv
      - name: Import package
        run: |
          python -c "import iteration_utilities"
      - name: Install test dependencies
        run: |
          python -m pip install pytest
      - name: Run tests
        run: |
          python -m pytest tests/
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: py_sdist
          path: ./dist/

  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.10"]
        architecture: [x64, x86]
    steps:
      - name: Check out source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install dependencies
        run: |
          python -m pip install pip setuptools wheel --upgrade
      - name: Create wheel
        if: matrix.os != 'macos-latest'
        run: |
          python -m pip wheel . --no-deps --wheel-dir=./wheelhouse/ -vv
      - name: Create wheel (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          python -m pip install delocate
          python -m pip wheel . --no-deps --wheel-dir=./wheelhouse-tmp/ -vv
          python -m delocate.cmd.delocate_listdeps ./wheelhouse-tmp/
      - name: Install package
        run: |
          python -m pip install iteration_utilities --no-index --find-links=./wheelhouse/ -vv
      - name: Import package
        run: |
          python -c "import iteration_utilities"
      - name: Install test dependencies
        run: |
          python -m pip install pytest
      - name: Run tests
        run: |
          python -m pytest tests/
      - name: Test types using MyPy.stubtest (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m pip install mypy
          python -m mypy.stubtest iteration_utilities
      - name: Upload wheel
        uses: actions/upload-artifact@v2
        if: matrix.os != 'ubuntu-latest'
        with:
          name: py${{ matrix.python-version }}-${{ matrix.architecture }}-${{ matrix.os }}
          path: ./wheelhouse/

  build-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Check out source
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install pip setuptools --upgrade
      - name: Install package
        run: |
          python -m pip install . --no-deps -vv
      - name: Install doc dependencies
        run: |
          python -m pip install sphinx numpydoc
      - name: Build doc
        run: |
          sphinx-build -b html -W -a -n docs/ build/sphinx/html/
      - name: Upload documentation
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ./build/sphinx/html/

  bundle-artifacts:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [build, build-sdist]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: docs
          path: ./docs
      - uses: actions/download-artifact@v2
        with:
          name: py_sdist
          path: ./sdist
      - uses: actions/download-artifact@v2
        with:
          name: py3.10-x64-windows-latest
          path: ./wheels
      - uses: actions/download-artifact@v2
        with:
          name: py3.10-x86-windows-latest
          path: ./wheels
      - name: Upload all
        uses: actions/upload-artifact@v2
        with:
          name: all
          path: ./
